(()=>{"use strict";const e=/(https?:\/\/[^\s()]+)/g;function t(e){let n="";for(const o of e.childNodes)o.nodeType===Node.TEXT_NODE?n+=o.textContent:o.nodeType===Node.ELEMENT_NODE&&"A"===o.tagName?o.textContent===o.href?n+=o.textContent:n+=`[${o.textContent}](${o.href})`:o.nodeType===Node.ELEMENT_NODE&&(n+=t(o));return n.trim()}function n(t){t.target.disabled=!0;let n=document.createElement("div");n.className="claim-report";const o=t.target.dataset.commentText,r=o.match(e);console.log(r),r?function(e){console.log("Extracting text from url: "+e);let t=e;return e.includes("#")&&(e.split("#")[1],t=e.split("#")[0]),new Promise(((e,n)=>{chrome.runtime.sendMessage({type:"fetchPageContent",url:t},(t=>{if(null===t.data)return void n("Null response from background script: "+t.error);const o=(new DOMParser).parseFromString(t.data,"text/html");console.log(o.body);const r=function(e){let t="";return t=e.childNodes?Array.from(e.childNodes).filter((e=>e.nodeType===Node.TEXT_NODE||e.nodeType===Node.ELEMENT_NODE&&"script"!==e.tagName.toLowerCase()&&"style"!==e.tagName.toLowerCase())).map((e=>e.nodeType===Node.TEXT_NODE?e.nodeValue:e.innerText)).join(" "):e.innerText,t.replace(/\s+/g," ").trim()}(o.body);console.log(r),e(r)}))}))}(r[0]).then((e=>{(async function(e,t){return new Promise(((n,o)=>{chrome.runtime.sendMessage({type:"getClaimsValidationReport",commentText:e,sourceText:t},(e=>{null!==e.data?n(e.data):o("Null response from background script: "+e.error)}))}))})(o,e).then((e=>{n.textContent=e,t.target.parentNode.insertBefore(n,t.target.nextSibling)})).catch((e=>{console.error(e),n.textContent=`Error retrieving source: <<${e.message}>>`,t.target.parentNode.insertBefore(n,t.target.nextSibling)}))})).catch((e=>{console.error(e),n.textContent=`Error extracting webpage from url: <<${e.message}>>`,t.target.parentNode.insertBefore(n,t.target.nextSibling)})):(n.textContent="No url found. This should not happen",t.target.parentNode.insertBefore(n,t.target.nextSibling))}!function(n,o){const r=n.getElementsByClassName("tagline");Array.from(r).forEach((function(n){const r=n.closest(".entry");if(r){const a=r.querySelector(".md");if(a){const r=t(a);e.test(r)&&o(n,r)}}}))}(document.body,(function(e,t){const o=e.querySelector("time");if(o){let e=document.createElement("button");e.textContent="Validate Claim",e.type="button",e.dataset.commentText=t,e.addEventListener("click",n),o.parentNode.insertBefore(e,o.nextSibling)}}))})();